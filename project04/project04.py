# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HuUIy0xGg6JUeHI6PyFm7gmwuVZ8eo2M
"""



import pyrosm
import osmnx as ox
import pandas as pd
import geopandas as gpd
import fiona
import numpy as np
import json
from shapely.ops import linemerge
import contextily as ctx
import matplotlib.pyplot as plt

######### ZADANIE 1A ###############

with open('proj4_params.json', 'r') as f:
    params = json.load(f)
identifier = params['id_column']
gdf_lamps = gpd.read_file('proj4_points.geojson')

gdf_lamps.to_crs('epsg:2180', inplace=True)

gdf_lamps['buffer_geom'] = gdf_lamps.geometry.buffer(100)

df_joins = gpd.sjoin(
    gdf_lamps[[identifier, 'geometry']],
    gdf_lamps.set_geometry('buffer_geom'),
    how='left',
    predicate='intersects'
)


count_df = df_joins.groupby(f'{identifier}_left').size().reset_index(name='count')

#id_column = identifier
count_df.rename(columns={f'{identifier}_left': identifier}, inplace=True)
count_df.head()
count_df.to_csv("proj4_ex01_counts.csv", index=False)

########## ZADANIE 1B ################
gdf_lamps.to_crs('epsg:4326', inplace=True)
gdf_lamps['lon'] = gdf_lamps['geometry'].apply(lambda p: p.x)
gdf_lamps['lat'] = gdf_lamps['geometry'].apply(lambda p: p.y)
ex_df = gdf_lamps[[identifier,'lat', 'lon']]
ex_df.to_csv('proj4_ex01_coords.csv', index=False, float_format='%.7f')


############### ZADANIE 2 ###############
city_name = params['city_pyrosm']
fp = pyrosm.get_data(city_name)
osm = pyrosm.OSM(fp)

G = osm.get_data_by_custom_criteria(custom_filter={'highway': ['tertiary']})
G = G[G['osm_type']=='way']
G['geometry'] = G['geometry'].apply(lambda x: linemerge(x) if x.geom_type == "MultiLineString" else x)
gdf_ex2 = gpd.GeoDataFrame(G[['id', 'name', 'geometry']], crs = G.crs)
gdf_ex2.rename({"id": "osm_id"}, inplace=True)
gdf_ex2.to_file("proj4_ex02_roads.geojson", driver='GeoJSON', index=False)

########## ZADANIE 3 #############
gdf_points = gpd.read_file("proj4_points.geojson")
gdf_points = gdf_points.to_crs('epsg:2180')
G_lines = gpd.read_file("proj4_ex02_roads.geojson")
G_lines = G_lines.to_crs('epsg:2180')


G_lines['buffer_geom'] = G_lines.buffer(50, cap_style=2, join_style=3)

df_joins = gpd.sjoin(
    gdf_points,
    G_lines.set_geometry('buffer_geom'),
    predicate='intersects',
    how='inner'
)
count_df = df_joins.groupby('name').size().reset_index(name='point_count')

count_df = count_df[count_df['point_count'] > 0]
count_df.to_csv("proj4_ex03_streets_points.csv", index=False)

######### ZADANIE 4.1 ###############

gdf = gpd.read_file("proj4_countries.geojson")

gdf['geometry'] = gdf['geometry'].boundary

gdf.to_pickle("proj4_ex04_gdf.pkl")

############# ZADANIE 4.2 ##############
gdf = gdf.to_crs(epsg=3857)
for name in gdf['name']:
  #print(country)
  country = gdf[gdf['name']==name]
  ax = country.plot()
  ctx.add_basemap(ax)
  plt.savefig(f"proj4_ex04_{name.lower().replace(' ', '_')}.png", dpi=300, bbox_inches='tight')
  plt.close()